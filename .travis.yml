dist: trusty
sudo: false
language: c++

git:
  depth: 1

addons:
  apt:
    sources: &apt_sources
      - ubuntu-toolchain-r-test
      - llvm-toolchain-trusty-5.0

cache:
  directories:
    - ${HOME}/.hunter

matrix:
  fast_finish: true
  include:
    - env: COMPILER=g++-7
      os: linux
      compiler: gcc
      addons: &gcc7
        apt:
          packages: ["g++-7", "libboost-dev", "libboost-iostreams-dev", "libfl-dev", "libgmp-dev", "pkg-config", "bison", "flex"]
          sources: *apt_sources

#    - env: COMPILER=clang++-5.0
#      os: linux
#      compiler: clang
#      addons: &clang50
#        apt:
#          packages: ["clang-5.0", "g++-7", "libboost-dev", "libboost-iostreams-dev", "libfl-dev", "libgmp-dev", "pkg-config", "bison", "flex"]
#          sources: *apt_sources

    - env: COMPILER=g++-7
      os: osx
      compiler: gcc
      osx_image: xcode9.2

    - env: COMPILER=clang++
      os: osx
      compiler: clang
      osx_image: xcode9.2

install:
  - |
    if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      brew install protobuf
      brew install bison
      brew upgrade gmp
      if [[ "${COMPILER}" == "g++-7" ]]; then
        brew install gcc@7
        brew link --overwrite gcc@7
      fi
    fi
    if [[ "${TRAVIS_OS_NAME}" = "linux" ]]; then
      wget https://github.com/google/protobuf/releases/download/v3.6.0/protobuf-all-3.6.0.tar.gz
      tar -xzvf protobuf-all-3.6.0.tar.gz
      pushd protobuf-3.6.0 && ./configure --prefix=/usr && make && sudo make install && popd
    fi

  - export CXX="${COMPILER}"

  - export PATH="/usr/local/opt/bison/bin:$PATH"

before_script:
  - mkdir -p build

script:
  - cd build && cmake -DCMAKE_VERBOSE_MAKEFILE=ON -DENABLE_GC=OFF -DENABLE_BMV2=OFF -DENABLE_EBPF=OFF -DENABLE_GTESTS=OFF -DENABLE_P4C_GRAPHS=OFF -DENABLE_P4TEST=OFF -DENABLE_UNIFIED_COMPILATION=OFF -DENABLE_UNITTESTS=ON -DCMAKE_BUILD_TYPE=Release -DHUNTER_JOBS_NUMBER=1 .. && cmake --build . && cd test && ctest

notifications:
  email: false
  slack:
    rooms:
      secure: Ezco+WkDybTPe+8iNKFyCAAuimsotzPeqy5Yv8+BOYVa9dC/glLjfofDAvjW5cfJ/FxpmDxAXWcG2Ruk7n1jDq/Jnn5gnjNQ44KrxUcjMq2CPNVtdJIn6TJyz0ZMYN3MpUCkDnsuIPBwb4lDlMrKpu1C8bIAoEFZite/RgYENLq6C4bu72e6RND2sHvCjYPj13+fTAjY9/voVDZK1Hkss8RM5V7QlG8z/c+KuCTk0qWsAbM/Z9Wrak4Ir8RHQ8XwPIz6mIlQaIdwy4UspQ8tA+wu2frxnkZatN4cfuhEUHtYB5K2wrtcCac6pC/SjJIDdAbA5nMb+drBdCqxXiFf1bhdBSu+F55Q/THlJltdxae8kqKszy33OBJPr+kAfNxIRYg8zrzhSQucLYsg797sQ4fnOGR+nNOqRdVUQ232PIaXBzLObczi64qC0MOJBgJcYT4nFyHeZHJhb0CorGt7/ay2VK5tJJ0XNE55xCSxiJuA8lVUtO3VQwijoT8AoO95citQ0DRShZXRzhVgmmmIk/SKN6y23d4N1vi0AXCxt010ArWusARWqu7j8bqsj7xUdzjEG9HsVluqrSYVH+Ca2F63sFW7mWZntLz7oKmeHLBj/bYKyBZmw/4hP/H8lzBdfeMx2lZDqvZN9UrENzzifjPPopPD94idc0pdYllt4KM=

Content-Length: 757

{"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":46350,"rootPath":"/Users/dmakarov/work/try/wtests/runtime-EclipseApplication/p4ls-test/","rootUri":"file:///Users/dmakarov/work/try/wtests/runtime-EclipseApplication/p4ls-test/","capabilities":{"workspace":{"applyEdit":true,"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true}},"hover":{},"signatureHelp":{},"references":{},"documentHighlight":{},"documentSymbol":{},"formatting":{},"rangeFormatting":{},"definition":{},"codeAction":{},"codeLens":{},"documentLink":{},"rename":{}}},"clientName":"Eclipse SDK"}}
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}
Content-Length: 5196

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/dmakarov/work/try/p4ls/test/main.p4","languageId":"p4","version":1,"text":"/* -*- P4_16 -*- */\n#include <core.p4>\n#include <v1model.p4>\n\nconst bit<16> TYPE_IPV4 = 0x800;\n\n/*************************************************************************\n*********************** H E A D E R S  ***********************************\n*************************************************************************/\n\ntypedef bit<9>  egressSpec_t;\ntypedef bit<48> macAddr_t;\ntypedef bit<32> ip4Addr_t;\n\nheader ethernet_t {\n    macAddr_t dstAddr;\n    macAddr_t srcAddr;\n    bit<16>   etherType;\n}\n\nheader ipv4_t {\n    bit<4>    version;\n    bit<4>    ihl;\n    bit<8>    diffserv;\n    bit<16>   totalLen;\n    bit<16>   identification;\n    bit<3>    flags;\n    bit<13>   fragOffset;\n    bit<8>    ttl;\n    bit<8>    protocol;\n    bit<16>   hdrChecksum;\n    ip4Addr_t srcAddr;\n    ip4Addr_t dstAddr;\n}\n\nstruct metadata {\n    /* empty */\n}\n\nstruct headers {\n    ethernet_t   ethernet;\n    ipv4_t       ipv4;\n}\n\n/*************************************************************************\n*********************** P A R S E R  ***********************************\n*************************************************************************/\n\nparser MyParser(packet_in packet,\n                out headers hdr,\n                inout metadata meta,\n                inout standard_metadata_t standard_metadata) {\n\n    state start {\n        transition parse_ethernet;\n    }\n\n    state parse_ethernet {\n        packet.extract(hdr.ethernet);\n        transition select(hdr.ethernet.etherType) {\n            TYPE_IPV4: parse_ipv4;\n            default: accept;\n        }\n    }\n\n    state parse_ipv4 {\n        packet.extract(hdr.ipv4);\n        transition accept;\n    }\n\n}\n\n/*************************************************************************\n************   C H E C K S U M    V E R I F I C A T I O N   *************\n*************************************************************************/\n\ncontrol MyVerifyChecksum(inout headers hdr, inout metadata meta) {\n    apply {  }\n}\n\n\n/*************************************************************************\n**************  I N G R E S S   P R O C E S S I N G   *******************\n*************************************************************************/\n\ncontrol MyIngress(inout headers hdr,\n                  inout metadata meta,\n                  inout standard_metadata_t standard_metadata) {\n    action drop() {\n        mark_to_drop();\n    }\n\n    action ipv4_forward(macAddr_t dstAddr, egressSpec_t port) {\n        standard_metadata.egress_spec = port;\n        hdr.ethernet.srcAddr = hdr.ethernet.dstAddr;\n        hdr.ethernet.dstAddr = dstAddr;\n        hdr.ipv4.ttl = hdr.ipv4.ttl - 1;\n    }\n\n    table ipv4_lpm {\n        key = {\n            hdr.ipv4.dstAddr: lpm;\n        }\n        actions = {\n            ipv4_forward;\n            drop;\n            NoAction;\n        }\n        size = 1024;\n        default_action = drop();\n    }\n\n    apply {\n        if (hdr.ipv4.isValid()) {\n            ipv4_lpm.apply();\n        }\n    }\n}\n\n/*************************************************************************\n****************  E G R E S S   P R O C E S S I N G   *******************\n*************************************************************************/\n\ncontrol MyEgress(inout headers hdr,\n                 inout metadata meta,\n                 inout standard_metadata_t standard_metadata) {\n    apply {  }\n}\n\n/*************************************************************************\n*************   C H E C K S U M    C O M P U T A T I O N   **************\n*************************************************************************/\n\ncontrol MyComputeChecksum(inout headers  hdr, inout metadata meta) {\n     apply {\n        update_checksum(\n            hdr.ipv4.isValid(),\n            { hdr.ipv4.version,\n              hdr.ipv4.ihl,\n              hdr.ipv4.diffserv,\n              hdr.ipv4.totalLen,\n              hdr.ipv4.identification,\n              hdr.ipv4.flags,\n              hdr.ipv4.fragOffset,\n              hdr.ipv4.ttl,\n              hdr.ipv4.protocol,\n              hdr.ipv4.srcAddr,\n              hdr.ipv4.dstAddr },\n            hdr.ipv4.hdrChecksum,\n            HashAlgorithm.csum16);\n    }\n}\n\n/*************************************************************************\n***********************  D E P A R S E R  *******************************\n*************************************************************************/\n\ncontrol MyDeparser(packet_out packet, in headers hdr) {\n    apply {\n        packet.emit(hdr.ethernet);\n        packet.emit(hdr.ipv4);\n    }\n}\n\n/*************************************************************************\n***********************  S W I T C H  *******************************\n*************************************************************************/\n\nV1Switch(\nMyParser(),\nMyVerifyChecksum(),\nMyIngress(),\nMyEgress(),\nMyComputeChecksum(),\nMyDeparser()\n) main;\n"}}}
Content-Length: 151

{"jsonrpc":"2.0","id":"2","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/dmakarov/work/try/p4ls/test/main.p4"}}}
Content-Length: 60

{"jsonrpc":"2.0","id":"3","method":"shutdown","params":null}
